{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","_components_Bio__WEBPACK_IMPORTED_MODULE_3__","map","_ref","node","frontmatter","fields","slug","tags","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","tag","index","fontSize","border","padding","borderRadius","color","marginRight","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery"],"mappings":"0NAQMA,4FACJC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MACrC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUb,KAAKC,MAAMY,SAAUR,MAAOH,GAC5CO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACET,MAAM,YACNU,SAAU,yCAEZN,EAAAC,EAAAC,cAACK,EAAA,EAAD,MACCV,EAAMW,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNd,EAAQc,EAAKC,YAAYf,OAASc,EAAKE,OAAOC,KAC9CC,EAAOJ,EAAKC,YAAYG,MAAQ,GACtC,MAAa,WAAVlB,GAEDI,EAAAC,EAAAC,cAAA,OAAKa,IAAKL,EAAKE,OAAOC,MACpBb,EAAAC,EAAAC,cAAA,MACEc,MAAO,CACLC,aAAcC,YAAO,OAGvBlB,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CAAMH,MAAO,CAAEI,UAAS,QAAYC,GAAIX,EAAKE,OAAOC,MACjDjB,IAGLI,EAAAC,EAAAC,cAAA,WAEIY,EAAKN,IAAI,SAACc,EAAIC,GAAL,OACPvB,EAAAC,EAAAC,cAAA,QACEa,IAAKO,EAAMC,EACXP,MAAO,CACLQ,SAAU,OACVC,OAAQ,+BACRC,QAAS,UACTC,aAAc,MACdC,MAAO,qBACPC,YAAa,QAEfP,MAIRtB,EAAAC,EAAAC,cAAA,aAAQQ,EAAKC,YAAYmB,MACzB9B,EAAAC,EAAAC,cAAA,KAAG6B,wBAAyB,CAAEC,OAAQtB,EAAKuB,mBA7CjCC,IAAMC,WAsDf/C,YAER,IAAMgD,EAAS","file":"component---src-pages-index-js-4aa25448f25467161a38.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          const tags = node.frontmatter.tags || []      \n          if(title === 'Resume') return false\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <div>\n                {\n                  tags.map((tag,index) => (\n                    <span\n                      key={tag + index}\n                      style={{\n                        fontSize: '12px',\n                        border: 'solid 1px rgb(107, 177, 228)',\n                        padding: '3px 5px',\n                        borderRadius: '6px',\n                        color: 'rgb(107, 177, 228)',\n                        marginRight: '7px'\n                      }}\n                    >{tag}</span>\n                  ))\n                }\n              </div>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}